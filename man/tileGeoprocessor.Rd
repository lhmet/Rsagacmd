% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{tileGeoprocessor}
\alias{tileGeoprocessor}
\title{Apply a SAGA-GIS tool on grid data using tile-based geoprocessing}
\usage{
tileGeoprocessor(grid, func, func_args, output_arg, nx, ny, overlap,
  overlap_fun = mean, intern = TRUE, cores = NULL)
}
\arguments{
\item{grid}{RasterLayer. Input raster to be used as a base for tiling}

\item{func}{Function. Function to be called from within a saga.gis object}

\item{func_args}{List. Named list of arguments and values to pass to the
selected SAGA-GIS tool. Use the argument placeholder . to indicate which
argument within func refers to the input grid.}

\item{output_arg}{Character. Name of the output feature from the SAGA-GIS
tool that is to be mosaicked after tiling. E.g., SLOPE. This is required
because many SAGA-GIS tools produce multiple outputs}

\item{nx}{Numeric. Number of horizontal tiles}

\item{ny}{Numeric. Number of vertical tiles}

\item{overlap}{Numeric. Number of cells to overlap the tiles}

\item{overlap_fun}{Function. E.g. mean, min or max. Must be a function that
accepts a 'na.rm' argument}

\item{intern}{Logical. Boolean to load the results as an R object. Default is
TRUE}

\item{cores}{Numeric. Number of physical processing cores to use while
running the selected SAGA-GIS tool, if supported. Default is to use all
cores.}
}
\value{
Results of the selected SAGA-GIS tool
}
\description{
Wraps the appplication of grid tiling with a user supplied SAGA-GIS tool
and mosaics the result
}
\examples{
\dontrun{
# initialize a saga.gis class
saga = initSAGA()

# generate a random terrain
dem = saga$grid_calculus$Random_Terrain(
    TARGET_USER_XMIN = 0,
    TARGET_USER_XMAX = 1000,
    TARGET_USER_YMIN = 0,
    TARGET_USER_YMAX = 1000,
    RADIUS = 200)

# calculate slope using grid tiling
slope = tileGeoprocessor(
    grid = dem,
    func = saga$ta_morphometry$Slope_Aspect_Curvature,
    func_args = list(ELEVATION = .),
    output_arg = 'SLOPE',
    nx = 3, ny = 3, overlap = 50,
    overlap_fun = mean
    )
}
}
